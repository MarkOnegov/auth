micronaut:
  application:
    name: auth
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
        generator:
          access-token:
            expiration: 300
    default-access: isAuthenticated()
    intercept-url-map:
      -
        pattern: "/"
        http-method: "GET"
        access:
          - isAnonymous()
      -
        pattern: "/*.html"
        http-method: "GET"
        access:
          - isAnonymous()
      -
        pattern: "/*.ico"
        http-method: "GET"
        access:
          - isAnonymous()
      -
        pattern: "/css/*"
        http-method: "GET"
        access:
          - isAnonymous()
      -
        pattern: "/js/*"
        http-method: "GET"
        access:
          - isAnonymous()
    endpoints:
      login:
        enabled: true
      logout:
        enabled: true
  router:
    static-resources:
      main:
        paths: classpath:public
        mapping: /**
datasources:
  default:
    url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    schema-generate: CREATE_DROP
    dialect: H2
netty:
  default:
    allocator:
      max-order: 3
